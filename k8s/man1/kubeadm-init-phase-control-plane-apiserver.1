.TH "KUBERNETES" "1" " kubernetes User Manuals" "Eric Paris" "Jan 2015" 
.nh
.ad l


.SH NAME
.PP
kubeadm init phase control\-plane apiserver \- Generates the kube\-apiserver static Pod manifest


.SH SYNOPSIS
.PP
\fBkubeadm init phase control\-plane apiserver\fP [OPTIONS]


.SH DESCRIPTION
.PP
Generates the kube\-apiserver static Pod manifest


.SH OPTIONS
.PP
\fB\-\-apiserver\-advertise\-address\fP=""
    The IP address the API Server will advertise it's listening on. If not set the default network interface will be used.

.PP
\fB\-\-apiserver\-bind\-port\fP=6443
    Port for the API Server to bind to.

.PP
\fB\-\-apiserver\-extra\-args\fP=
    A set of extra flags to pass to the API Server or override default ones in form of <flagname>=<value>

.PP
\fB\-\-cert\-dir\fP="/etc/kubernetes/pki"
    The path where to save and store the certificates.

.PP
\fB\-\-config\fP=""
    Path to a kubeadm configuration file.

.PP
\fB\-\-control\-plane\-endpoint\fP=""
    Specify a stable IP address or DNS name for the control plane.

.PP
\fB\-\-feature\-gates\fP=""
    A set of key=value pairs that describe feature gates for various features. Options are:
IPv6DualStack=true|false (ALPHA \- default=false)

.PP
\fB\-\-image\-repository\fP="k8s.gcr.io"
    Choose a container registry to pull control plane images from

.PP
\fB\-\-kubernetes\-version\fP="stable\-1"
    Choose a specific Kubernetes version for the control plane.

.PP
\fB\-\-service\-cidr\fP="10.96.0.0/12"
    Use alternative range of IP address for service VIPs.


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-azure\-container\-registry\-config\fP=""
    Path to the file containing Azure container registry configuration information.

.PP
\fB\-\-log\-flush\-frequency\fP=5s
    Maximum number of seconds between log flushes

.PP
\fB\-\-rootfs\fP=""
    [EXPERIMENTAL] The path to the 'real' host root filesystem.

.PP
\fB\-\-version\fP=false
    Print version information and quit


.SH SEE ALSO
.PP
\fBkubeadm\-init\-phase\-control\-plane(1)\fP,


.SH HISTORY
.PP
January 2015, Originally compiled by Eric Paris (eparis at redhat dot com) based on the kubernetes source material, but hopefully they have been automatically generated since!
